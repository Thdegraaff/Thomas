<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo | Thomas de Graaff</title>
    <link>https://www.thomasdegraaff.nl/categories/hugo/</link>
      <atom:link href="https://www.thomasdegraaff.nl/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    <description>hugo</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© Thomas de Graaff, 2020</copyright><lastBuildDate>Fri, 22 Dec 2017 14:08:26 +0100</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>hugo</title>
      <link>https://www.thomasdegraaff.nl/categories/hugo/</link>
    </image>
    
    <item>
      <title>Migrating from Jekyll to Hugo</title>
      <link>https://www.thomasdegraaff.nl/post/2017-12-22-migrating/</link>
      <pubDate>Fri, 22 Dec 2017 14:08:26 +0100</pubDate>
      <guid>https://www.thomasdegraaff.nl/post/2017-12-22-migrating/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;For quite some time I have been thinking about migrating my (very small) website to the 
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;
 platform. Mostly because I admire the information rich structure of 
&lt;a href=&#34;kieranhealy.org&#34;&gt;Kieran Healy&amp;rsquo;s&lt;/a&gt;
 website and he converted already from 
&lt;a href=&#34;https://jekyllrb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jekyll&lt;/a&gt;
 to Hugo a while ago. Because my website is indeed quite small, it does not suffer from Jekyll oftentimes being slow. However, I needed some additional features of my Jekyll site (e.g., converting bibtex to a reference list), which could not automatically be rendered by 
&lt;a href=&#34;github.com&#34;&gt;Github&lt;/a&gt;
 which is my choice of deployment. Therefore, I used a rakefile which I did not completely understand, but resulting in asynchronous versions of source code and published website, which is undesirable. Finally, I have read somewhere that I can deploy my beloved &lt;code&gt;.org&lt;/code&gt; files as well using Hugo, which seems almost brilliant.&lt;/p&gt;
&lt;h3 id=&#34;choosing-a-template&#34;&gt;Choosing a template&lt;/h3&gt;
&lt;p&gt;So I decided to convert my website to Hugo with a website design close to that of Kieran Healy. Interestingly, Kieran Healy based his website on Greg Restall&amp;rsquo;s 
&lt;a href=&#34;consequently.org&#34;&gt;consequently.org&lt;/a&gt;
. There is a large amount of Hugo templates by now and the 
&lt;a href=&#34;https://github.com/lambdafu/hugo-finite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo-Finite&lt;/a&gt;
 came closest to what I wanted (actually, this template is based on that of Greg Restall). Unfortunately, it still needed quite a lot of (css) work to get it in the shape I wanted. Then, by sheer accident, I stumbled upon the website of 
&lt;a href=&#34;https://robjhyndman.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rob J Hyndman&lt;/a&gt;
, who had already worked on the Hugo-Finite template to make it look more like Kieran Healy&amp;rsquo;s website. Moreover, his template works in combination with 
&lt;a href=&#34;https://bookdown.org/yihui/bookdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bookdown&lt;/a&gt;
, which might be handy, if I want to convert &lt;code&gt;.rmd&lt;/code&gt; files in the future (say for education purposes), therefore I decided to copy his template and adapt it to my own needs.&lt;/p&gt;
&lt;h3 id=&#34;the-process--the-result&#34;&gt;The process &amp;amp; the result&lt;/h3&gt;
&lt;p&gt;To be honest, it took me quite a while to understand the structure of a Hugo template, especially with the various lay-outs. Moreover, it turned out that I had to make a &lt;code&gt;markdown&lt;/code&gt; file for each publication separately, which is rather cumbersome. So, especially the seminars and publication sections still need quite some work. Moreover, adapting small things (get syntax highlighting correct for &lt;code&gt;R&lt;/code&gt;, appropriately adapting the footer, starting to tamper with the css files), took me quite some time. However, the result looks already good (alhough still quite like that of Rob J Hyndman in terms of css). So I imagine that in the coming weeks I will work on this further and start change small pieces here and there. At the moment I am still quite unhappy about two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deployment: At the moment I have to add, commit and push twice to Github (once for my source code and once for my published site). I need to change this by or using a Makefile or a shell script.&lt;/li&gt;
&lt;li&gt;I need to think about how and whether to include a software page (for &lt;code&gt;R&lt;/code&gt; packages and &lt;code&gt;LaTeX&lt;/code&gt; chunks).&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
