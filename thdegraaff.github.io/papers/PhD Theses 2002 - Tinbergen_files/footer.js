jQuery(document).ready( function ($){

	//Changing current menu item (current_page_parent) to follow WP styles for Custom Post Types
	
	// adding current-post-ancestor to menus which are parents to CPT posts.
	// using body classes for targetting pages.
	// Bootstrap uses 'active'.. so appending that to li classes as well
	
	var classList =$('body').attr('class').split(/\s+/);
	
	for ( i = classList.length-1; i >= 0; i-- ) {
		var has_replacement = false;
		var targetClass = classList[i];
		$('ul.joyo_set_active li.'+targetClass).each(function() {
			$(this).has('ul').removeClass(targetClass).addClass('current-post-ancestor active');
			$(this).not($(this).has('ul')).removeClass(targetClass).addClass('current-menu-item active');
			has_replacement = true;
		});
		if ( has_replacement ) {
			break;
		}
	}
	
	// Bootstrap uses 'active'.. so appending that to li classes as well
	$('ul.joyo_set_active li.current-menu-item').addClass('active');
	$('ul.joyo_set_active li.current-menu-ancestor').addClass('active');
	//update menu with page-ancestors too, not only if not in same menu (hence usage of .not('current-page-parent'))
	$('ul.joyo_set_active li.current-page-ancestor').not('ul.joyo_set_active li.current-page-parent').addClass('active');
	//update menu with possible ancestors of page-ancestors too
	$('ul.joyo_set_active li').has('li.current-page-ancestor').addClass('active')
	
	//toggle list
	$('ul.list li.toggle-trigger').click(function() {
		$(this).toggleClass('open');
		$('div.toggle-me',this).slideToggle('0.5');
		$(this).siblings('li.open').each(function(index) {
		    $('div.toggle-me',this).slideToggle('0.5');
		    $(this).toggleClass('open');
		});
	});
	
	//toggle list initialization
	$('ul.list li.toggle-trigger .toggle-me').css('display','none');
	
	
		// TO-TOP
	// -------------------------------------------------------------------	
	//$(".nav.joyo_set_active li a").click(function(e) {	
		// SIMPLE:
		// $('html,body').animate({scrollTop: $($(this).attr('href')).offset().top},'slow'); 
		// FANCY'r:
		//$($(this).attr('href')).slideto({
		//	highlight: false	
		//});
	//});
	$(".to-top").click(function(e) {	
		$("#segment-header").slideto({
			highlight: false	
		});
	});
	
	
	$('.flexslider').flexslider({
		
		namespace: "flex-",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin
		selector: ".slides > li",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
		animation: "fade",              //String: Select your animation type, "fade" or "slide"
		easing: "swing",               //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
		direction: "horizontal",        //String: Select the sliding direction, "horizontal" or "vertical"
		reverse: false,                 //{NEW} Boolean: Reverse the animation direction
		animationLoop: true,             //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
		smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
		startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)
		slideshow: true,                //Boolean: Animate slider automatically
		slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds
		animationSpeed: 700,            //Integer: Set the speed of animations, in milliseconds
		initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds
		randomize: false,               //Boolean: Randomize slide order
		 
		// Usability features
		pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
		pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
		useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available
		touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
		video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches
		 
		// Primary Controls
		controlNav: true,               //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
		directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)
		prevText: "Previous",           //String: Set the text for the "previous" directionNav item
		nextText: "Next",               //String: Set the text for the "next" directionNav item
		 
		// Secondary Navigation
		keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys
		multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
		mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
		pausePlay: false,               //Boolean: Create pause/play dynamic element
		pauseText: 'Pause',             //String: Set the text for the "pause" pausePlay item
		playText: 'Play',               //String: Set the text for the "play" pausePlay item
		 
		// Special properties
		controlsContainer: "",          //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
		manualControls: "",             //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
		sync: "",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
		asNavFor: "",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider
		 
		// Carousel Options
		itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
		itemMargin: 0,                  //{NEW} Integer: Margin between carousel items.
		minItems: 0,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
		maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
		move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.
		 
		// Callback API
		start: function(){},            //Callback: function(slider) - Fires when the slider loads the first slide
		before: function(){},           //Callback: function(slider) - Fires asynchronously with each slider animation
		after: function(){},            //Callback: function(slider) - Fires after each slider animation completes
		end: function(){},              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
		added: function(){},            //{NEW} Callback: function(slider) - Fires after a slide is added
		removed: function(){}           //{NEW} Callback: function(slider) - Fires after a slide is removed
	});
	
	$('li.sidebar-homepage-middle-center.joyo_clbtype li:has(img)').hover(
			function () {
				$('.hover-image img',this).toggle();
				$('div.calendar',this).toggle();
			}, 
			function () {
				$('.hover-image img',this).toggle();
				$('div.calendar',this).toggle();
			}
	);
	
	//removing empty conference/lecture lists on homepage sidebar
	$('li.joyo_clbtype:not(:has(ul))').remove();
	
	//controls for mega-menu researchgroups
	$('ul#menu-secondary li:not(.active) a.mega-menu').hover(
		function() {
			var classList =$(this).attr('class').split(/\s+/);
			$.each( classList, 
			function(index, item){
			    if (item !== 'mega-menu') {
			    	$('section.'+item).fadeIn('fast', function() {
			            // Animation complete
			        });
			    }
			});
		}
		,
		function() {
			var classList =$(this).attr('class').split(/\s+/);
			$.each( classList, 
			function(index, item){
				if (item !== 'mega-menu') {
			    	$('section.'+item).css('display','none');
			    }
			});
		}
	);
	
	//get your select element and listen for a change event on it 
	$('#searchFellowByInterest select').change(function() {
		//set the window's location property to the value of the option the user has selected
		var filter_link = '/fellow/#filter=.'+$(this).val();
    	window.location.href = filter_link;
	});

	//get your select element and listen for a change event on it 
	$('.searchPhDBySelect select').change(function() {
		//set the window's location property to the value of the option the user has selected
		var filter_link = '/phd-student/#filter=.'+$(this).val();
    	window.location.href = filter_link;
	});
	
	//get your select element and listen for a change event on it 
	$('.searchMPhilBySelect select').change(function() {
		//set the window's location property to the value of the option the user has selected
		var filter_link = '/mphil-student/#filter=.'+$(this).val();
    	window.location.href = filter_link;
	});
	
	//uses html5placeholder.jquery.min.js
	$('input[placeholder]').placeholder();
	
	//mailchimp signup form styling
	$('#mc_signup_submit').addClass('btn btn-primary');
	//$('.featured-widget #mc_signup_form').addClass('form-horizontal');
	$('.mc_merge_var').addClass('control-group');
	$('.mc_var_label').addClass('control-label');
	$('.mc_input').wrap('<div class="controls" />');
	
	$('BODY.joyo_secret input[type="submit"]').addClass('btn btn-primary');
	
	// Fix for dropdowns on mobile devices
    $('body').on('touchstart.dropdown', '.dropdown-menu', function (e) { 
        e.stopPropagation(); 
    });
    $(document).on('click','.dropdown-menu a',function(){
        document.location = $(this).attr('href');
    });
    
    $( function(){
		
    	if ( $('ul.people-isotope').length ) {
		
	    	$.joyoIsotope = new Object(); 
	    	$.joyoIsotope.data_filters = {};
	    	
	    	var $container = $('ul.people-isotope'),
			
			// object that will keep track of options
			isotopeOptions = {},
			
			// defaults, used if not explicitly set in hash
			defaultOptions = {
				filter: '*',
				layoutMode: 'masonry'
			};
			
	    	var setupOptions = $.extend( {}, defaultOptions, {
				itemSelector : '.joyo_isotope_item'	
			});
		      
			// set up Isotope (remove when using bbq!)
			// $container.isotope( setupOptions );
			
			$('a.isotope-filter').click( function(){
				
				var $this = $(this);
				var title = $this.attr('title');
				
				var data_filter = $this.attr('data-filter');
				
            	//added show/hide for displaying job market candidates placement director
				if ( data_filter == 'job-market-candidates' ) {
					
					$('div#job-market-candidates').show();
				}
				
				// don't proceed if already in selected data_filters
				if ( data_filter in $.joyoIsotope.data_filters ) {
					return false;
				}
				addSearchChoice( title, data_filter );
				
				return false;
			});
			
			//get your select element and listen for a change event on it 
			$('select.isotope-filter').change( function() {
				
				var $this = $(this);
				var title = $('option:selected', this).attr('title');
				var data_filter = $this.val();
				
				// don't proceed if already in selected data_filters or user is selecting starting value
				if ( data_filter in $.joyoIsotope.data_filters || data_filter == '0' ) {
					return false;
				}
				addSearchChoice( title, data_filter );
				$this.val('0'); //resetting dropdown filter to starting value.
				return false;
			});
	
			//add selected link to selected filters array (and display)
			function addSearchChoice( title, data_filter ) {
				
				var searchChoiceContainer = createSearchChoiceContainer( title, data_filter );
				$.joyoIsotope.data_filters[data_filter] = title;
				
				$('ul.select2-choices').append( searchChoiceContainer );
				
				var filter_link = '#filter=';
	        	for( var index in $.joyoIsotope.data_filters ) {
					filter_link += '.'+index;
				}
	        	window.location.href = filter_link;
			}
	
			function createSearchChoiceContainer ( title, data_filter ) {
	
				var container = $(document.createElement("li")).attr({
	                	"class": "select2-search-choice"
	            	}).html([
	            	         "<div>"+title+"</div>" ,
	            	         "<a class='select2-search-choice-close' data-filter='"+data_filter+"' href=''></a>"]);
	            $( 'a', container).click( function() {
	            	//removing clicked data_filter from data_filters array
	            	delete $.joyoIsotope.data_filters[data_filter];
	            	$(this).closest('.select2-search-choice').remove();
	            	
	            	//added show/hide for displaying job market candidates placement director 
	            	if ( data_filter == 'job-market-candidates' ) {
	            		
	            		$('div#job-market-candidates').hide();
	            		
	            		$('ul.people-isotope li.isotope-item').not('.isotope-hidden').each( function() {
							
							$( this ).removeClass( 'height2' );
							$( 'dl.content-large', this ).hide();
							$( 'dl.content-small', this ).show();
							$( 'a.isotope-show-less', this ).hide();
							$( 'a.isotope-show-more', this ).show();
							
						} );
	            	}
	            	
	            	var filter_link = '#filter=';
	            	for( var index in $.joyoIsotope.data_filters ) {
						filter_link += '.'+index;
					}
	            	window.location.href = filter_link;
	            	return false;
	            });
	            return container;
	        }
			
			var hashChanged = false;
				
			$(window).bind( 'hashchange', function( event ){
				
				// get options object from hash
				
				var aniEngine = hashChanged ? 'best-available' : 'none';
				if ( $('html').hasClass('ie6') || $('html').hasClass('ie7') || $('html').hasClass('ie8') || $('html').hasClass('ie9') ) {
				
					aniEngine = 'none'
				}
				var hashOptions = window.location.hash ? $.deparam.fragment( window.location.hash, false ) : {},
						// do not animate first call
						aniEngine,
						// apply defaults where no option was specified
						options = $.extend( {}, defaultOptions, hashOptions, { animationEngine: aniEngine } );
				// apply options from hash
				$container.isotope( options );
				// save options
				isotopeOptions = hashOptions;
				
				
				if ( !hashOptions.filter || hashOptions.filter === '' ) { //fix for emptying search-choices
					
					$.joyoIsotope.data_filters = {};
					$('.select2-search-choice').remove();
				}
				else {
					
					var $temp_data_filters = $.extend( true, {}, $.joyoIsotope.data_filters);
					
					$hash_filters = hashOptions.filter.split('.');
					var length = $hash_filters.length;
					for ( var i = 1; i < length; i++) {
						
						var data_filter = $hash_filters[i];

						//added show/hide for displaying job market candidates placement director
						if ( data_filter == 'job-market-candidates' ) {
							
							$('div#job-market-candidates').show();
							
							//select all li not hidden with 'isotope-hidden'
							$('ul.people-isotope li.isotope-item').not('.isotope-hidden').each( function() {
									
									$( this ).addClass( 'height2' );
									
									$( 'dl.content-large', this ).show();
									$( 'dl.content-small', this ).hide();
									$( 'a.isotope-show-less', this ).show();
									$( 'a.isotope-show-more', this ).hide();
								}
							);
							$container.isotope('reLayout');
						}
						
						if ( typeof $.joyoIsotope.data_filters[$hash_filters[i]] === "undefined"  ) { //bestaat wel in hash, maar niet in data_filters (dus ook niet in searhChoices ul)
							
							//check for occurence in anchor first:
							var title = $('a.isotope-filter[data-filter="'+$hash_filters[i]+'"]').attr('title');
							if ( typeof title === 'undefined' ) {
								//not found in anchors, try options instead:
								var title = $('option[value="'+$hash_filters[i]+'"]').attr('title');
							}
	
							this.searchChoiceContainer = createSearchChoiceContainer( title, data_filter );
							$.joyoIsotope.data_filters[data_filter] = title;
							$('ul.select2-choices').append(this.searchChoiceContainer);
							
						}
						else {
							
							delete $temp_data_filters[$hash_filters[i]]; 
						}
					}
	
					//overige properties bestaan wel in data_filters, maar niet in hash (dus moet nog uit searchChoices ul)
					for( var property in $temp_data_filters) {
						delete $.joyoIsotope.data_filters[property];
						$('li.select2-search-choice').has('a.select2-search-choice-close[data-filter="'+property+'"]').remove();
					}
				}
				hashChanged = true;
			})
			// trigger hashchange to capture any hash data on init
			.trigger('hashchange');
			
			$('a.isotope-show-more').click( function(){
				
				$(this).siblings('a.isotope-show-less').show();
				$(this).siblings('dl.content-small').hide();
				$(this).siblings('dl.content-large').show();
				
				$(this).parent('li.isotope-item').addClass( 'height2' );
				
				$(this).hide();
				
				$container.isotope('reLayout');
				return false;
			});
			
			$('a.isotope-show-less').click( function(){
				
				$(this).siblings('a.isotope-show-more').show();
				$(this).siblings('dl.content-small').show();
				$(this).siblings('dl.content-large').hide();
				
				$(this).parent('li.isotope-item').removeClass( 'height2' );
				
				$(this).hide();
				
				$container.isotope('reLayout');
				return false;
			});
			
			
		}
	});

	$(document).load($(window).bind("resize", listenWidth));

	var mobile = false;
	var desktop = false;
	function listenWidth( e ) {
		if($(window).width()<600)
		{
			if (mobile == false) {
				$('div.middle-left').insertAfter($('div.middle-right'));
				mobile = true;
				desktop = false;
			}
		} else {
			if (mobile == true && desktop == false) {
				$('div.middle-left').insertBefore($('div.middle-mid'));
				mobile = false;
				desktop = true;
			}
		}
	}
});